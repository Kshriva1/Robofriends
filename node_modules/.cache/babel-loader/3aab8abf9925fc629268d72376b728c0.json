{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\kunda\\\\Desktop\\\\Robofriends\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kunda\\\\Desktop\\\\Robofriends\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kunda\\\\Desktop\\\\Robofriends\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kunda\\\\Desktop\\\\Robofriends\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kunda\\\\Desktop\\\\Robofriends\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kunda\\\\Desktop\\\\Robofriends\\\\src\\\\containers\\\\App.js\";\nimport React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport { robots } from '../robots';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport { connect } from 'react-redux';\nimport { setSearchField } from '../action.js';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    searchField: state.searchField\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onSearchChange: function onSearchChange(event) {\n      return dispatch(setSearchField(event.target.value));\n    }\n  };\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      robots: robots\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://jsonplaceholder.typicode.com/users').then(function (response) {\n        return response.json();\n      }).then(function (users) {\n        _this2.setState({\n          robots: users\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var robots = this.state.robots;\n      var _this$props = this.props,\n          searchField = _this$props.searchField,\n          onSearchChange = _this$props.onSearchChange;\n      var filteredRobots = robots.filter(function (robots) {\n        return robots.name.toLowerCase().includes(searchField.toLowerCase());\n      });\n\n      if (!robots.length) {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"Loading\");\n      } else {\n        return React.createElement(\"div\", {\n          className: \"tc\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"RoboFriends\"), React.createElement(SearchBox, {\n          searchChange: onSearchChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }), React.createElement(Scroll, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(ErrorBoundary, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(CardList, {\n          robots: filteredRobots,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }))));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:\\Users\\kunda\\Desktop\\Robofriends\\src\\containers\\App.js"],"names":["React","Component","CardList","SearchBox","ErrorBoundary","robots","Scroll","connect","setSearchField","mapStateToProps","state","searchField","mapDispatchToProps","dispatch","onSearchChange","event","target","value","App","fetch","then","response","json","users","setState","props","filteredRobots","filter","name","toLowerCase","includes","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,cAA/B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC9B,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACC;AADd,GAAP;AAIF,CALD;;AAOA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACtC,SAAO;AACPC,IAAAA,cAAc,EAAE,wBAACC,KAAD;AAAA,aAAWF,QAAQ,CAACL,cAAc,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CAAnB;AAAA;AADT,GAAP;AAGF,CAJD;;IAMMC,G;;;;;AAEH,iBAAc;AAAA;;AAAA;;AACb;AACA,UAAKR,KAAL,GAAa;AACZL,MAAAA,MAAM,EAAEA;AADI,KAAb;AAFa;AAKb;;;;wCAEmB;AAAA;;AAEnBc,MAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACM,UAAAC,QAAQ;AAAA,eAAGA,QAAQ,CAACC,IAAT,EAAH;AAAA,OADd,EAECF,IAFD,CAEM,UAAAG,KAAK,EAAE;AAAC,QAAA,MAAI,CAACC,QAAL,CAAc;AAACnB,UAAAA,MAAM,EAAEkB;AAAT,SAAd;AAA+B,OAF7C;AAGA;;;6BAIM;AAAA,UACDlB,MADC,GACS,KAAKK,KADd,CACDL,MADC;AAAA,wBAEkC,KAAKoB,KAFvC;AAAA,UAEId,WAFJ,eAEIA,WAFJ;AAAA,UAEgBG,cAFhB,eAEgBA,cAFhB;AAGP,UAAMY,cAAc,GAAGrB,MAAM,CAACsB,MAAP,CAAc,UAAAtB,MAAM,EAAG;AAE5C,eAAOA,MAAM,CAACuB,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmCnB,WAAW,CAACkB,WAAZ,EAAnC,CAAP;AACA,OAHqB,CAAvB;;AAKF,UAAG,CAACxB,MAAM,CAAC0B,MAAX,EAAmB;AAClB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACA,OAFD,MAEO;AACL,eACC;AAAK,UAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADD,EAEC,oBAAC,SAAD;AAAW,UAAA,YAAY,EAAEjB,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFD,EAGC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACM,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACF,oBAAC,QAAD;AAAU,UAAA,MAAM,EAAEY,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADE,CADN,CAHD,CADD;AAWF;AACA;;;;EAzCiBzB,S;;AA4ClB,eAAeM,OAAO,CAACE,eAAD,EAAiBG,kBAAjB,CAAP,CAA4CM,GAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport ErrorBoundary from '../components/ErrorBoundary'\r\nimport { robots } from '../robots';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport { connect } from 'react-redux';\r\nimport { setSearchField } from '../action.js';\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n     searchField: state.searchField\r\n    \r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n   onSearchChange: (event) => dispatch(setSearchField(event.target.value))\r\n }\r\n}\r\n\r\nclass App extends Component {\r\n\r\n   constructor() {\r\n   \tsuper()\r\n   \tthis.state = {\r\n   \t\trobots: robots \r\n   \t}\r\n   }\r\n\r\n   componentDidMount() {\r\n      \r\n   \tfetch('https://jsonplaceholder.typicode.com/users')\r\n   \t.then(response=> response.json())\r\n   \t.then(users=>{this.setState({robots: users})});\r\n   }\r\n\r\n \r\n\r\n\trender() {\r\n\t\tconst {robots} = this.state\r\n      const { searchField,onSearchChange} = this.props\r\n\t\t\tconst filteredRobots = robots.filter(robots=> {\r\n\t\t\r\n   \t\treturn robots.name.toLowerCase().includes(searchField.toLowerCase());\r\n   \t})\r\n\r\n\tif(!robots.length) {\r\n\t\treturn <h1>Loading</h1>\r\n\t} else {\r\n   return (\r\n   \t<div className='tc'>\r\n   \t\t<h1>RoboFriends</h1>\r\n   \t\t<SearchBox searchChange={onSearchChange}/>\r\n   \t\t<Scroll>\r\n           <ErrorBoundary>\r\n   \t\t    <CardList robots={filteredRobots} />\r\n           </ErrorBoundary>  \r\n   \t\t</Scroll>\r\n   \t</div>\t\r\n   \t);\r\n}\r\n}\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}